{"ast":null,"code":"var _jsxFileName = \"/home/mgroberts/code/okta-hosted-login/src/Profile.jsx\",\n    _s = $RefreshSig$();\n\n/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport React, { useState, useEffect } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport { Header, Icon, Table } from 'semantic-ui-react';\n\nconst Profile = () => {\n  _s();\n\n  const {\n    authState,\n    oktaAuth\n  } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      // When user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      oktaAuth.getUser().then(info => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, oktaAuth]); // Update if authState changes\n\n  if (!userInfo) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Fetching user profile...\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    as: \"h1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"drivers license outline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }), ' ', \"My User Profile (ID Token Claims)\", ' '), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Below is the information from your ID token which was obtained during the \\xA0\", /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://developer.okta.com/docs/guides/implement-auth-code-pkce\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"PKCE Flow\"), ' ', \"and is now stored in local storage.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"This route is protected with the\", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"<SecureRoute>\"), ' ', \"component, which will ensure that this page cannot be accessed until you have authenticated.\"), /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, \"Claim\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Value\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, Object.entries(userInfo).map(claimEntry => {\n    const claimName = claimEntry[0];\n    const claimValue = claimEntry[1];\n    const claimId = `claim-${claimName}`;\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: claimName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    }, claimName), /*#__PURE__*/React.createElement(\"td\", {\n      id: claimId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }, claimValue));\n  })))));\n};\n\n_s(Profile, \"/7FunoA1ejJNU8uKGTy1GZFqU2I=\", false, function () {\n  return [useOktaAuth];\n});\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/mgroberts/code/okta-hosted-login/src/Profile.jsx"],"names":["React","useState","useEffect","useOktaAuth","Header","Icon","Table","Profile","authState","oktaAuth","userInfo","setUserInfo","isAuthenticated","getUser","then","info","Object","entries","map","claimEntry","claimName","claimValue","claimId"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2018, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport React, { useState, useEffect } from 'react';\nimport { useOktaAuth } from '@okta/okta-react';\nimport { Header, Icon, Table } from 'semantic-ui-react';\n\nconst Profile = () => {\n  const { authState, oktaAuth } = useOktaAuth();\n  const [userInfo, setUserInfo] = useState(null);\n\n  useEffect(() => {\n    if (!authState.isAuthenticated) {\n      // When user isn't authenticated, forget any user info\n      setUserInfo(null);\n    } else {\n      oktaAuth.getUser().then((info) => {\n        setUserInfo(info);\n      });\n    }\n  }, [authState, oktaAuth]); // Update if authState changes\n\n  if (!userInfo) {\n    return (\n      <div>\n        <p>Fetching user profile...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <div>\n        <Header as=\"h1\">\n          <Icon name=\"drivers license outline\" />\n          {' '}\n          My User Profile (ID Token Claims)\n          {' '}\n        </Header>\n        <p>\n          Below is the information from your ID token which was obtained during the &nbsp;\n          <a href=\"https://developer.okta.com/docs/guides/implement-auth-code-pkce\">PKCE Flow</a>\n          {' '}\n          and is now stored in local storage.\n        </p>\n        <p>\n          This route is protected with the\n          <code>&lt;SecureRoute&gt;</code>\n          {' '}\n          component, which will ensure that this page cannot be accessed until you have authenticated.\n        </p>\n        <Table>\n          <thead>\n            <tr>\n              <th>Claim</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {Object.entries(userInfo).map((claimEntry) => {\n              const claimName = claimEntry[0];\n              const claimValue = claimEntry[1];\n              const claimId = `claim-${claimName}`;\n              return (\n                <tr key={claimName}>\n                  <td>{claimName}</td>\n                  <td id={claimId}>{claimValue}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n"]},"metadata":{},"sourceType":"module"}