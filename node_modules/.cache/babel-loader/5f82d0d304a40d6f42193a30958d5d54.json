{"ast":null,"code":"/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport _regeneratorRuntime from '@babel/runtime/regenerator';\nimport _asyncToGenerator from '@babel/runtime/helpers/asyncToGenerator';\nimport _slicedToArray from '@babel/runtime/helpers/slicedToArray';\nimport { createContext, useContext, createElement, useState, useEffect, useRef } from 'react';\nimport { useHistory, useRouteMatch, Route } from 'react-router-dom';\nimport { toRelativeUrl, AuthSdkError } from '@okta/okta-auth-js';\nimport _objectWithoutProperties from '@babel/runtime/helpers/objectWithoutProperties';\nvar OktaContext = /*#__PURE__*/createContext(null);\n\nvar useOktaAuth = function useOktaAuth() {\n  return useContext(OktaContext);\n};\n\nvar OktaError = function OktaError(_ref) {\n  var error = _ref.error;\n\n  if (error.name && error.message) {\n    return /*#__PURE__*/createElement(\"p\", null, error.name, \": \", error.message);\n  }\n\n  return /*#__PURE__*/createElement(\"p\", null, \"Error: \", error.toString());\n};\n\nvar Security = function Security(_ref) {\n  var oktaAuth = _ref.oktaAuth,\n      onAuthRequired = _ref.onAuthRequired,\n      children = _ref.children;\n  var history = useHistory();\n\n  var _React$useState = useState(function () {\n    if (!oktaAuth) {\n      return {\n        isPending: true,\n        isAuthenticated: false,\n        idToken: null,\n        accessToken: null\n      };\n    }\n\n    return oktaAuth.authStateManager.getAuthState();\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      authState = _React$useState2[0],\n      setAuthState = _React$useState2[1];\n\n  useEffect(function () {\n    if (!oktaAuth) {\n      return;\n    }\n\n    if (!oktaAuth.options.restoreOriginalUri) {\n      oktaAuth.options.restoreOriginalUri = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_, originalUri) {\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  history.replace(toRelativeUrl(originalUri, window.location.origin));\n\n                case 1:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee);\n        }));\n\n        return function (_x, _x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n    }\n\n    oktaAuth.userAgent = \"@okta/okta-react\".concat(\"/\", \"4.0.0\", \" \", oktaAuth.userAgent);\n    oktaAuth.authStateManager.subscribe(function (authState) {\n      setAuthState(authState);\n    });\n\n    if (!oktaAuth.isLoginRedirect()) {\n      oktaAuth.authStateManager.updateAuthState();\n    }\n\n    return function () {\n      return oktaAuth.authStateManager.unsubscribe();\n    };\n  }, [oktaAuth, history]);\n\n  if (!oktaAuth) {\n    var err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return /*#__PURE__*/createElement(OktaError, {\n      error: err\n    });\n  }\n\n  return /*#__PURE__*/createElement(OktaContext.Provider, {\n    value: {\n      oktaAuth: oktaAuth,\n      authState: authState,\n      _onAuthRequired: onAuthRequired\n    }\n  }, children);\n};\n\nvar withOktaAuth = function withOktaAuth(ComponentToWrap) {\n  var WrappedComponent = function WrappedComponent(props) {\n    var oktaAuthProps = useOktaAuth();\n    return /*#__PURE__*/createElement(ComponentToWrap, Object.assign({}, oktaAuthProps, props));\n  };\n\n  WrappedComponent.displayName = 'withOktaAuth_' + (ComponentToWrap.displayName || ComponentToWrap.name);\n  return WrappedComponent;\n};\n\nvar LoginCallback = function LoginCallback(_ref) {\n  var errorComponent = _ref.errorComponent;\n\n  var _useOktaAuth = useOktaAuth(),\n      oktaAuth = _useOktaAuth.oktaAuth,\n      authState = _useOktaAuth.authState;\n\n  var authStateReady = !authState.isPending;\n  var ErrorReporter = errorComponent || OktaError;\n  useEffect(function () {\n    oktaAuth.handleLoginRedirect();\n  }, [oktaAuth]);\n\n  if (authStateReady && authState.error) {\n    return /*#__PURE__*/createElement(ErrorReporter, {\n      error: authState.error\n    });\n  }\n\n  return null;\n};\n\nvar SecureRoute = function SecureRoute(_ref) {\n  var onAuthRequired = _ref.onAuthRequired,\n      routeProps = _objectWithoutProperties(_ref, [\"onAuthRequired\"]);\n\n  var _useOktaAuth = useOktaAuth(),\n      oktaAuth = _useOktaAuth.oktaAuth,\n      authState = _useOktaAuth.authState,\n      _onAuthRequired = _useOktaAuth._onAuthRequired;\n\n  var match = useRouteMatch(routeProps);\n  var pendingLogin = useRef(false);\n  useEffect(function () {\n    var handleLogin = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var onAuthRequiredFn;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!pendingLogin.current) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                pendingLogin.current = true;\n                oktaAuth.setOriginalUri();\n                onAuthRequiredFn = onAuthRequired || _onAuthRequired;\n\n                if (!onAuthRequiredFn) {\n                  _context.next = 10;\n                  break;\n                }\n\n                _context.next = 8;\n                return onAuthRequiredFn(oktaAuth);\n\n              case 8:\n                _context.next = 12;\n                break;\n\n              case 10:\n                _context.next = 12;\n                return oktaAuth.signInWithRedirect();\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function handleLogin() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (!match) {\n      return;\n    }\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    if (!authState.isAuthenticated && !authState.isPending) {\n      handleLogin();\n    }\n  }, [authState.isPending, authState.isAuthenticated, oktaAuth, match, onAuthRequired, _onAuthRequired]);\n\n  if (!authState.isAuthenticated) {\n    return null;\n  }\n\n  return /*#__PURE__*/createElement(Route, Object.assign({}, routeProps));\n};\n\nexport { LoginCallback, OktaContext, SecureRoute, Security, useOktaAuth, withOktaAuth };","map":{"version":3,"sources":["../../src/OktaContext.ts","../../src/OktaError.tsx","../../src/Security.tsx","../../src/withOktaAuth.tsx","../../src/LoginCallback.tsx","../../src/SecureRoute.tsx"],"names":["OktaContext","useOktaAuth","OktaError","error","React","Security","onAuthRequired","children","authState","setAuthState","isPending","accessToken","oktaAuth","options","history","authStateManager","err","value","ComponentToWrap","WrappedComponent","LoginCallback","ErrorReporter","authStateReady","SecureRoute","_onAuthRequired","handleLogin","pendingLogin","current","onAuthRequiredFn"],"mappings":"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","sourcesContent":["/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\nimport * as React from 'react';\nimport { AuthState, OktaAuth } from '@okta/okta-auth-js';\n\nexport type OnAuthRequiredFunction = (oktaAuth: OktaAuth) => Promise<void>;\n\nexport interface IOktaContext {\n    oktaAuth: OktaAuth;\n    authState: AuthState;\n    _onAuthRequired: OnAuthRequiredFunction;\n}\n\nconst OktaContext = React.createContext<IOktaContext | null>(null);\n\nexport const useOktaAuth = (): IOktaContext => React.useContext(OktaContext);\n\nexport default OktaContext;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\n\nconst OktaError: React.FC<{ error: Error }> = ({ error }) => { \n  if(error.name && error.message) { \n    return <p>{error.name}: {error.message}</p>;\n  }\n  return <p>Error: {error.toString()}</p>;\n};\n\nexport default OktaError;\n","/*!\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { toRelativeUrl, AuthSdkError, OktaAuth } from '@okta/okta-auth-js';\nimport OktaContext, { OnAuthRequiredFunction } from './OktaContext';\nimport OktaError from './OktaError';\n\nconst Security: React.FC<{\n  oktaAuth: OktaAuth, \n  onAuthRequired?: OnAuthRequiredFunction,\n  children?: React.ReactNode\n} & React.HTMLAttributes<HTMLDivElement>> = ({ \n  oktaAuth, \n  onAuthRequired, \n  children \n}) => { \n  const history = useHistory();\n  const [authState, setAuthState] = React.useState(() => {\n    if (!oktaAuth) {\n      return { \n        isPending: true,\n        isAuthenticated: false,\n        idToken: null,\n        accessToken: null,\n      };\n    }\n    return oktaAuth.authStateManager.getAuthState();\n  });\n\n  React.useEffect(() => {\n    if (!oktaAuth) {\n      return;\n    }\n\n    // Add default restoreOriginalUri callback\n    if (!oktaAuth.options.restoreOriginalUri) {\n      oktaAuth.options.restoreOriginalUri = async (_, originalUri) => {\n        history.replace(toRelativeUrl(originalUri, window.location.origin));\n      };\n    }\n\n    // Add okta-react userAgent\n    oktaAuth.userAgent = `${process.env.PACKAGE_NAME}/${process.env.PACKAGE_VERSION} ${oktaAuth.userAgent}`;\n\n    // Update Security provider with latest authState\n    oktaAuth.authStateManager.subscribe((authState) => {\n      setAuthState(authState);\n    });\n\n    // Trigger an initial change event to make sure authState is latest\n    if (!oktaAuth.isLoginRedirect()) {\n      oktaAuth.authStateManager.updateAuthState();\n    }\n\n    return () => oktaAuth.authStateManager.unsubscribe();\n  }, [oktaAuth, history]);\n\n  if (!oktaAuth) {\n    const err = new AuthSdkError('No oktaAuth instance passed to Security Component.');\n    return <OktaError error={err} />;\n  }\n\n  return (\n    <OktaContext.Provider value={{ \n      oktaAuth, \n      authState, \n      _onAuthRequired: onAuthRequired\n    }}>\n      {children}\n    </OktaContext.Provider>\n  );\n};\n\nexport default Security;\n","/*\n * Copyright (c) 2020-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, IOktaContext } from './OktaContext';\n\nconst withOktaAuth = <P extends IOktaContext>(\n  ComponentToWrap: React.ComponentType<P>\n): React.FC<Omit<P, keyof IOktaContext>> => { \n  const WrappedComponent = (props) => { \n    const oktaAuthProps = useOktaAuth();\n    return <ComponentToWrap {...oktaAuthProps as IOktaContext } {...props as P} />;\n  };\n  WrappedComponent.displayName = 'withOktaAuth_' + (ComponentToWrap.displayName || ComponentToWrap.name);\n  return WrappedComponent;\n};\n\nexport default withOktaAuth;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth } from './OktaContext';\nimport OktaError from './OktaError';\n\nconst LoginCallback: React.FC<{ \n  errorComponent?: React.ComponentType<{ error: Error }>\n}> = ({ errorComponent }) => { \n  const { oktaAuth, authState } = useOktaAuth();\n  const authStateReady = !authState.isPending;\n\n  const ErrorReporter = errorComponent || OktaError;\n\n  React.useEffect(() => {\n    oktaAuth.handleLoginRedirect();\n  }, [oktaAuth]);\n\n  if(authStateReady && authState.error) { \n    return <ErrorReporter error={authState.error}/>;\n  }\n\n  return null;\n};\n\nexport default LoginCallback;\n","/*\n * Copyright (c) 2017-Present, Okta, Inc. and/or its affiliates. All rights reserved.\n * The Okta software accompanied by this notice is provided pursuant to the Apache License, Version 2.0 (the \"License.\")\n *\n * You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0.\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *\n * See the License for the specific language governing permissions and limitations under the License.\n */\n\nimport * as React from 'react';\nimport { useOktaAuth, OnAuthRequiredFunction } from './OktaContext';\nimport { Route, useRouteMatch, RouteProps } from 'react-router-dom';\n\nconst SecureRoute: React.FC<{\n  onAuthRequired?: OnAuthRequiredFunction;\n} & RouteProps & React.HTMLAttributes<HTMLDivElement>> = ({ \n  onAuthRequired, \n  ...routeProps \n}) => { \n  const { oktaAuth, authState, _onAuthRequired } = useOktaAuth();\n  const match = useRouteMatch(routeProps);\n  const pendingLogin = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleLogin = async () => {\n      if (pendingLogin.current) {\n        return;\n      }\n\n      pendingLogin.current = true;\n\n      oktaAuth.setOriginalUri();\n      const onAuthRequiredFn = onAuthRequired || _onAuthRequired;\n      if (onAuthRequiredFn) {\n        await onAuthRequiredFn(oktaAuth);\n      } else {\n        await oktaAuth.signInWithRedirect();\n      }\n    };\n\n    // Only process logic if the route matches\n    if (!match) {\n      return;\n    }\n\n    if (authState.isAuthenticated) {\n      pendingLogin.current = false;\n      return;\n    }\n\n    // Start login if app has decided it is not logged in and there is no pending signin\n    if(!authState.isAuthenticated && !authState.isPending) { \n      handleLogin();\n    }  \n  }, [\n    authState.isPending, \n    authState.isAuthenticated, \n    oktaAuth, \n    match, \n    onAuthRequired, \n    _onAuthRequired\n  ]);\n\n  if (!authState.isAuthenticated) {\n    return null;\n  }\n\n  return (\n    <Route\n      { ...routeProps }\n    />\n  );\n};\n\nexport default SecureRoute;\n"]},"metadata":{},"sourceType":"module"}